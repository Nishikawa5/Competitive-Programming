Input and Output (I/O) description. In this section, you will be given details
on how the input is formatted and on how you should format your output. This
part is usually written in a formal manner. A good problem should have clear input
constraints as the same problem might be solvable with di↵erent algorithms for di↵erent
input constraints (see Table 1.4).
• Sample Input and Sample Output. Problem authors usually only provide trivial
test cases to contestants, e.g., see Exercise 1.1.1. The sample input/output is intended for contestants to check their basic understanding of the problem and to verify
if their code can parse the given input using the given input format and produce the
correct output using the given output format. Do not submit your code to the judge if
it does not even pass the given sample input/output. See Section 1.3.5 about testing
your code before submission.

Number of test cases:
1. The number of test cases is given in the first line of the input.
2. The multiple test cases are terminated by special values (usually zero(es)), regardless
whether there are subsequent inputs afterwards.
3. The multiple test cases are terminated by the EOF (end-of-file) signal.

int a, b;                                           | 1 2 | 3
// stop when both integers are 0                    | 5 7 | 12
while (scanf("%d %d", &a, &b), (a || b))            | 6 3 | 9
    printf("%d\n", a+b);                            | 0 0 |--------------
//                do not process this extra line -> | 1 1 |

int a, b;                                                | 1 2 | 3
// scanf returns the number of items read                | 5 7 | 12
while (scanf("%d %d", &a, &b) == 2)                      | 6 3 | 9
// or you can check for EOF, i.e.,                       |--------------|--------------
// while (scanf("%d %d", &a, &b) != EOF) | |
    printf("%d\n", a+b); | |



---------------------------------------------------------------------------
int a, b, c = 0;                                | 1 2 | Case 1: 3
while (scanf("%d %d", &a, &b) != EOF) {         | 5 7 |
if (c > 0) printf("\n"); // 2nd/more cases      | 6 3 | Case 2: 12
printf("Case %d: %d\n", ++c, a+b);              |-----|
}                                               |     | Case 3: 9
-------------------------------------------------------------------------
To not give presentation error (PE)


while (1) { // keep looping                         | 1         | 1
    int ans = 0, v;                                 | 3 4       | 7
    char dummy;                                     | 8 1 1     | 10
    while (scanf("%d%c", &v, &dummy) != EOF) {      | 7 2 9 3   | 21
        ans += v;                                   | 1 1 1 1 1 | 5
        if (dummy == ’\n’) break; // test EOLN      |--------------|--------------
    } | |
    if (feof(stdin)) break; // test EOF | |
    printf("%d\n", ans); | |
}


Case analysis: analyze different cases of the problem


Various libraries to be included (iostream, cstdio, cmath, cstring, etc, which
can now be all-included by using #include <bits/stdc++.h> if the programming contest that you 
join uses GNU C++ compiler and allows it)